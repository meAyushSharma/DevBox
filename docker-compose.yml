name: DevBox-v0
services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    env_file: ./server/.env
    environment:
      - NODE_ENV=production
    volumes:
      - "./server:/app"
      - /app/node_modules
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./server/.env:/app/.env
    networks:
      - devbox-network
    command: npm run dev

  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    restart: always
    env_file: ./client/.env
    environment:
      - NODE_ENV=production
    volumes:
      - "./client:/app"
      - /app/node_modules
    networks:
      - devbox-network
    command: npm run dev -- --host
    depends_on:
      - server

  worker:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    env_file: ./server/.env
    volumes:
      - "./server:/app"
      - /app/node_modules
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - devbox-network
    depends_on:
      - server
    command: ["npm", "run", "start:cron"]
  
  
  caddy:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN}
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - devbox-network
    depends_on:
      - server
      - client

volumes:
  caddy_data:
  caddy_config:

networks:
  devbox-network:
    driver: bridge
